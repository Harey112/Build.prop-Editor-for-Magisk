#!/system/bin/sh

id=buildp-edb2
v=v1.0.1
md=/data/adb/modules/$id
f=$md/system.prop
m1=$md/tweak

x() {
if [ -e $f ]; then rm $f;fi
touch $f
 lss
if [[ $lss = 1 ]] ;then
 for g in $co1; do
 gpn "$g"
   gs "$g"
  cpp "$gpn"
   if [[ $cpp0 > 0 ]]; then
if [ $gs = e ]; then
for p in $cpp1; do
gpinf "$gpn" $p gps
if [ $gps = 1 ]; then
pp=$(ls $m1/$gpn | sed "${p}q;d")
       echo "$pp" >>$f
       fi;done;fi;fi;done;fi
      }
      

g1() {
   clear
 echo $1 "$2"
 echo $3 "$4"
 echo $5 "$6"
 $7
 printf "$8"
 $9
 
}

  

tlb() {
lss
  if [[ $lss = 1 ]] ; then
        
        for j in $co1; do
gs $j
 
 echo -e "$j \t|\t$gpn1 \t|\t[${gs}]"
done
            else
                echo -e "\t[Empty]\n"
                fi
        }

 tlb1(){
    gpn $1
  cpp "$gpn"
  for k in $cpp1; do
vpp=$(ls $m1/"$gpn" | sed "${k}q;d")
    gpinf $gpn $k gps
    case $gps in
1) sss=e;;
0) sss=d;;
  esac
vp $k $vpp $sss
   done
  }
  
 vp() {
  
   echo -e "$1 \t|\t$2 \t|\t[$3]"
  }
 

noinp() {
if [ -z "$1" ]; then pv "[No input]";sleep 1;$2; fi
  }

 
q() {
    clear
x
    printf "\n"
    pv "Bye!!"
    exit
  }
    

  
pv() {
t="$@"
tc=$(echo "$t" | wc -m)
n=1
until [ $n = $tc ]; do
nn="$nn $n" ;n=$(($n+1)); done
for i in $nn
do
g=$(echo "$t" | cut -c -$i)
    printf "\r$g"
    done
printf "\n"
nn=""
  }

co() {
      co0=$(ls $m1 | wc -l | awk '{print $1}') 2>/dev/null 
      co1=$(ls $m1 | nl | awk '{print $1}') 2>/dev/null
    }
  

lss() {
co

if [ $co0 = 0 ];then lss=0
    elif [[ $co0 > 0 ]]; then lss=1; fi
  
    }
    

gpn() {
   
  gpn=$(ls $m1 | sed "${1}q;d")
   gpn1=$(echo "$gpn" | sed 's#_# #')
}


gs() {
    gpn $1
ls $m1/"$gpn"/.disable 1>/dev/null 2>/dev/null && gs=d || gs=e
}

gb(){
 
  case $2 in
B|b) $4; $5;$6; $1;;
esac

}

tpf() {
  if [ $2 = e ]; then touch $m1/"$1"/.disable
elif [ $2 = d ]; then rm $m1/"$1"/.disable;fi
x
  
}


edpf() {
  us=$(echo "$2" | sed 's# #_#')
    mv $m1/"$1" $m1/"$us"
x
  }


rmpf() {
    rm -rR $m1/"$1"
x
  }
  

gpinf() {

   vinf=$(ls $m1/"$1" | sed ""$2"q;d")
   $3 $vinf "" "" "" "$1"
  }
  

gps() {
if [ -e $m1/$5/$1/.disable ]; then gps=0; else gps=1 ;fi
   }
    

cpp(){
   ls $m1/"$1" >/dev/null && {
cpp0=$(ls $m1/"$1" | wc -l | awk '{print $1}') 2>/dev/null
   cpp1=$(ls $m1/"$1" | nl | awk '{print $1}') 2>/dev/null
   
  } || { pv "[File doesn't exist]" ;}
  } 2>/dev/null

tpp() {
    if [ $2 = 1 ]; then
        touch $m1/"$1"/$3/.disable
elif [ $2 = 0 ];then
         rm $m1/"$1"/$3/.disable; fi
x
  }

edpp() {
   
    mv "$m1/"$1"/$2" "$m1/"$1"/$3"
x
  }

rmpp() {
       rm -rR $m1/"$1"/$2
x
  }

addpp() {
    ppch $1 $2
     if [ -h $m1/"$3"/$1 ]; then pv "$1 js already exists!"; $2;
      else
ppp=$m1/"$3"/$1
       mkdir $ppp
       fi
    }
ppch() {
echo "$1" | grep = >/dev/null && {
        
        pp=$(echo "$1" | sed 's#=# #')
        p1=$(echo "$pp" | awk '{print $1}') 
        if [ -z $p1 ]; then pv "[No key]"; $2;fi
        p2=$(echo "$pp" | awk '{print $2}')
        if [ -z $p2 ]; then pv "[No value]";$2;fi
      } || {
        pv '[No "=" symbol detected]';sleep 1; $2;
      }
   }

  
  
a() {
    g1 "-e" "\tCreate Profile\n" "" "Type B to go back" "" "" "" "Profile name:" "read a"
    gb 3 $a a
    noinp "$a" a
    a=$(echo "$a" | sed 's# #_#')
    a0=$(echo "$a" | sed 's#_# #')
    ls $m1 | grep $a >/dev/null && { pv "[${a0} is already exist]"; sleep 1; a;}
      mkdir -p $m1/$a
    a1
}


a1() {
    while true; do
    g1 "-e" "\tProfile: ${a0}" "" "Add property" "-e" "Type <key>=<value>\nEx.: ro.config.low_ram=true\n\n Type B if you're done." "" "Input:" "read a1"
      gb 3 $a1 a1
        noinp "$a1" "a=$a; a1"
addpp $a1 a1 $a
done
}





b() {
    g1 "-e" "\tManage Profile\n" "" "" "-e" "No. \t|\tProfile \t|\t[Status]\n" "tlb" "\nType B to go back\n\nNo.:" "read -n 1 b"
    noinp "$b" b
gb 3 $b b
co
echo -n "$co1" | grep $b >/dev/null || { pv "Not found"; b; }
lss
if [ $lss = 0 ]; then printf "\n"; pv "[Profile list is empty]"; sleep 1;3; fi
b1 $b
  }


b1() {
  gs $1
  
  echo -e "\n\tManage $gpn1\n"
  if [ $gs = e ]; then echo "1. Disable"
elif [ $gs = d ]; then echo "1. Enable"; fi
echo -e "2. Edit Name\n3. Manage Property\n4. Remove\nB. Back"
    printf "Input:"
    read -n 1 b1
noinp "$b1" "b1 $1"
case $b1 in
1) tpf "$gpn" $gs;;
2) b2 "$gpn";;
3) b3 $1;;
4) rmpf "$gpn";;
B|b) gb b $b1 b1;;
*) pv "Invalid"; sleep 1; b1 $1;;
    esac
b
  }

b2() {
  g1 "-e" "\n\tEdit Name\n" "" "Type B to go back" "" "" "" "New Name:" "read b2"
gb b1 "$b2" b2
noinp "$b2" "b2 $1"
  edpf "$1" "$b2"
}

b3(){
 gpn $1
  g1 "-e" "\tManage $gpn1 property" "" "" "-e" "No. \t|\tProperty \t|\t[Status]" "tlb1 $1" "\nType A to add property\nType B to go back\n\nNo:" "read -n 1 b3"
noinp "$b3" "b3 $1"
 gb "b1 $1" $b3 b3
case "$b3" in
A|a) b3ad "$gpn1" "$gpn" $1;;
esac
cpp $1 >/dev/null
echo -n "$cpp1" | grep $b3 >/dev/null || { pv "Not found"; sleep 1; b3 $1; }
gpinf "$gpn" $b3 "b33 "$gpn" $b3 $1"

}

b3ad() {
    while true; do
    g1 "-e" "\n\tProfile: $1" "" "Add property" "-e" "Type <key>=<value>\nEx.: ro.config.low_ram=true\n\n Type B if you're done." "" "Input:" "read b3ad"
      gb "b3 $3" $b3ad b3ad
        noinp "$b3ad" "b3ad=$b3ad; b3"
addpp "$b3ad" b3 $2

done
}

b33() {
 
 gpinf "$1" $2 gps
case $gps in
1) sss=e;;
0) sss=d;;
esac
 echo -e "\n\t $4 [$sss]\n"
 if [ $gps = 1 ]; then echo "1. Disable";
  elif [ $gps = 0 ]; then echo "1. Enable";fi
echo -e "2. Edit Value\n3. Remove\nB. Back\n"
  printf "No.:"
  read -n 1 b33
noinp "$b3 " "b3 "$1" $2"
  gb "b3 $3" $b33 b33
  case $b33 in
 1) gpinf "$1" $2 "tpp "$1" $gps";;
 2) gpinf "$1" $2 "b333 "$3"";;
 3) gpinf "$1" $2 "rmpp "$1"" ;;
*) pv "Invalid"; sleep 1; b33 $1 $2 $3 $4 ;;
 esac
b3 $3
}

b333() {
 gpn $1
 echo -e "\tEdit $2 value\n$2\n"
 pr=$(printf "$2" | sed 's#=# #' | awk '{print $1}')
 printf "${pr}="
 read b333
 noinp "$b333" "b33 $1 $2 $3"
 edpp "$gpn" $2 "$pr=$b333"
x
 b3 "$1"
}


c() {
  clear
  pv "----------System Properties----------"
  cat /system/build.prop | grep = | sed '/#/d'
  pv "----------Custom Property/s----------"
  cpr=$(cat $f)
  if [[ -z $cpr ]]; then 
  echo "None"
  else
   cat $f
   fi
read ?
  3
}


d(){
 clear
 cat $md/Help.txt
 read ?
 3
}




3() {
 
 g1 "-e" "\tBuild.prop Editor $v" "-e" "Edit system property systemlessly!!\n" "" "\t1. Create Profile\n \t2. Manage Profile\n \t3. View Property\n \t4. Help & About\n \tQ. Quit\n" "" "Choice:" "read -s -n 1 m"
noinp "$m" 3
  case $m in
1) a;;
2) b;;
3) c;;
4) d;;
Q|q) q;;
*) printf "\n"; pv "[Invalid]";sleep 1; 3;;
esac
}



ls /data >/dev/null || { pv [No root access]; sleep 2 ; exit;}



case $1 in
-C|-c) a;;
-M|-m) b;;
-L|-l) c;;
-H|-h) d;;
*) 3;;
esac


3
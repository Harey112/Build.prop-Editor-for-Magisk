#!/system/bin/sh
#DIRs
id=buildp-edb2
v=v1.0.1
md=/data/adb/modules/$id
f=$md/system.prop
m1=$md/tweak



g1() {
   clear
 echo $1 "$2"
 echo $3 "$4"
 echo $5 "$6"
 $7
 printf "$8"
 $9
 
}

  
l
tlb() {
lss
  if [[ $lss = 1 ]] ; then
        
        for j in $co1; do
gs $j
 
 echo -e "$j \t|\t$gpn1 \t|\t[${gs}]"
done
            else
                echo -e "\t[Empty]\n"
                fi
        }

 tlb1(){
    gpn $1
  cpp "$gpn"
  for k in $cpp1; do
vpp=$(cat $m1/"$gpn"/mod | sed "${k}q;d")
vp $k $vpp
   done
  }
  
 vp() {
  
   echo -e "$1 \t|\t$2=$3 \t|\t[$4]"
  }
  

noinp() {
if [ -z "$1" ]; then pv "[No input]";sleep 1;$2; fi
  }

 
q() {
    clear
    printf "\n"
    pv "Bye!!"
    exit
  }
    

  
pv() {
t="$@"
tc=$(echo "$t" | wc -m)
n=1
until [ $n = $tc ]; do
nn="$nn $n" ;n=$(($n+1)); done
for i in $nn
do
g=$(echo "$t" | cut -c -$i)
    printf "\r$g"
    done
printf "\n"
nn="" #reset $nn
  }

co() {
      co0=$(ls $m1 | wc -l | awk '{print $1}') 2>/dev/null #count 0 - end
      co1=$(ls $m1 | nl | awk '{print $1}') 2>/dev/null #count 1 - end
    }
  

lss() {
co

if [ $co0 = 0 ];then lss=0
    elif [[ $co0 > 0 ]]; then lss=1; fi
  
    }
    

gpn() {
   
  gpn=$(ls $m1 | sed "${1}q;d")
   gpn1=$(echo "$gpn" | sed 's#_# #')
}


gs() {
    gpn $1
ls $m1/"$gpn"/.disable 1>/dev/null 2>/dev/null && gs=d || gs=e
}
#GO BACK stdin=Var Function stdout=var
gb(){
  case $2 in
B|b) "$1";$3="";;
esac

}

tpf() {
  if [ $2 = e ]; then touch $m1/"$1"/.disable
elif [ $2 = d ]; then rm $m1/"$1"/.disable;fi
  
}


edpf() {
  us=$(echo "$2" | sed 's# #_#')
    mv $m1/"$1" $m1/"$us"
  }


rmpf() {
    rm -rR $m1/"$1"
  }
  

gpinf() {

   vinf=$(cat $m1/"$1"/mod | sed ""$2"q;d")
   $3 $vinf
  }
  

gps() {
if [ $3 = e ]; then gps=1
elif [ $3 = d ]; then gps=0; fi
   }
    

cpp(){
   ls $m1/"$1"/mod >/dev/null && {
cpp0=$(wc -l $m1/"$1"/mod | awk '{print $1}')
   cpp1=$(nl $m1/"$1"/mod | awk '{print $1}')
   
  } || { pv "[File doesn't exist]" ;}
   }

tpp() {
    if [ $2 = 1 ]; then
        dp=$(cat $m1/"$1"/mod | sed "s#$3 $4 e#$3 $4 d#")
    echo -en "$dp\n" >$m1/"$1"/mod
elif [ $2 = 0 ];then
         dp=$(cat $m1/"$1"/mod | sed "s#$3 $4 d#$3 $4 e#")
    echo -en "$dp\n" >$m1/"$1"/mod; fi
  }

edpp() {
   
    dp=$(cat $m1/"$1"/mod | sed "s#$2 $3#$2 $4#")
    echo -e "$dp\n" >$m1/"$1"/mod

  }

rmpp() {
       dp=$(cat $m1/"$1"/mod | sed "/$2 $3/d")
    echo -en "$dp\n" >$m1/"$1"/mod
  }

addpp() {
    ppch $1 $2
ls $m1/"$3"/mod >/dev/null && {
cpp "$3"
if [[ $cpp0 < 1 ]]; then
printf "$pp e" >>$m1/"$3"/mod
else
    printf "\n$pp e" >>$m1/"$3"/mod
fi
    } || { printf "$pp e" >>$m1/"$3"/mod; }

  }
    

ppch() {
echo "$1" | grep = >/dev/null && {
        
        pp=$(echo "$1" | sed 's#=# #')
        p1=$(echo "$pp" | awk '{print $1}') 
        if [ -z $p1 ]; then pv "[No key]"; $2;fi
        p2=$(echo "$pp" | awk '{print $2}')
        if [ -z $p2 ]; then pv "[No value]";$2;fi
      } || {
        pv '[No "=" symbol detected]';sleep 1; $2;
      }
   }

  
  
a() {
    g1 "-e" "\tCreate Profile\n" "" "Type B to go back" "" "" "" "Profile name:" "read a"
    gb 3 $a a
    noinp "$a" a
    a=$(echo "$a" | sed 's# #_#')
    a0=$(echo "$a" | sed 's#_# #')
    ls $m1 | grep $a >/dev/null && { pv "[${a0} is already exist]"; sleep 1; a;}
      mkdir -p $m1/$a
    a1
}


a1() {
    while true; do
    g1 "-e" "\tProfile: ${a0}" "" "Add property" "-e" "Type <key>=<value>\nEx.: ro.config.low_ram=true\n\n Type B if you're done." "" "Input:" "read a1"
      gb 3 $a1 a1
        noinp "$a1" "a=$a; a1"
addpp $a1 a1 $a
done
}





b() {
    g1 "-e" "\tManage Profile\n" "" "" "-e" "No. \t|\tProfile \t|\t[Status]\n" "tlb" "\nType B to go back\n\nNo.:" "read -n 1 b"
    noinp "$b" b
gb 3 $b b
lss
if [ $lss = 0 ]; then printf "\n"; pv "[Profile list is empty]"; sleep 1;3; fi
b1 $b
  }


b1() {
  gs $1
  
  echo -e "\n\tManage $gpn1\n"
  if [ $gs = e ]; then echo "1. Disable"
elif [ $gs = d ]; then echo "1. Enable"; fi
echo -e "2. Edit Name\n3. Manage Property\n4. Remove\nB. Back"
    printf "Input:"
    read -n 1 b1
noinp "$b1" "b1 $1"
case $b1 in
1) tpf "$gpn" $gs;;
2) b2 "$gpn";;
3)b3 $1;;
4) rmpf "$gpn";;
B|b) gb b $b1 b1;;
    esac
b
  }

b2() {
  g1 "-e" "\n\tEdit Name\n" "" "Type B to go back" "" "" "" "New Name:" "read b2"
gb b1 "$b2" b2
noinp "$b2" "b2 $1"
  edpf "$1" "$b2"
}

b3(){
 gpn $1
  g1 "-e" "\tManage $gpn1 property" "" "" "-e" "No. \t|\tProperty \t|\t[Status]" "tlb1 $1" "\nType A to add property\nType B to go back\n\nNo:" "read -n 1 b3"
noinp "$b3" "b3 $1"
 gb b1 $b3 b3
case "$b3" in
A|a) b3ad "$gpn1" "$gpn";;
esac
gpinf "$gpn" $b3 "b33 "$gpn" $b3 $1"

}

b3ad() {
    while true; do
    g1 "-e" "\n\tProfile: $1" "" "Add property" "-e" "Type <key>=<value>\nEx.: ro.config.low_ram=true\n\n Type B if you're done." "" "Input:" "read b3ad"
      gb b3 $b3ad b3ad
        noinp "$b3ad" "b3ad=$b3ad; b3"
addpp "$b3ad" b3 $2

done
}

b33() {
 
 gpinf "$1" $2 gps
 echo -e "\n\t $4=$5 [$6]\n"
 if [ $gps = 1 ]; then echo "1. Disable";
  elif [ $gps = 0 ]; then echo "1. Enable";fi
echo -e "2. Edit Value\n3. Remove\nB. Back\n"
  printf "No.:"
  read -n 1 b33
noinp "$b3" "b3 "$1" $2"
  gb b3 $b33 "b33 "$1" $2"
  case $b33 in
 1) gpinf "$1" $2 "tpp "$1" $gps";;
 2) gpinf "$1" $2 "b333 "$3"";;
 3) gpinf "$1" $2 "rmpp "$1"" ;;
B|b) gb "b3 $3" $b33 b33;;
 esac
b3 $3
}

b333() {
 gpn $1
 echo -e "\tEdit $2 value\n$2=$3\n"
 printf "$2="
 read b333
 noinp "$b333" "b33 $1 $2 $3"
 edpp "$gpn" $2 $3 "$b333"
 b3 "$1"
}


c() {
  clear
  pv "----------System Property----------"
  cat /system/build.prop | grep = | sed '/#/d'
read ?
  3
}


d(){
 clear
 cat $md/Help.txt
 read ?
 3
}




3() {
 
 g1 "-e" "\tBuild.prop Editor $v" "-e" "Edit system property systemlessly!!\n" "" "\t1. Create Profile\n \t2. Manage Profile\n \t3. View Property\n \t4. Help & About\n \tQ. Quit\n" "" "Choice:" "read -s -n 1 m"
noinp "$m" 3
  case $m in
1) a;;
2) b;;
3) c;;
4) d;;
Q|q|ctrl-c) q;;
*) printf "\n"; pv "[Invalid]";sleep 1; 3;;
esac
}




ls data >/dev/null && {;} || { pv [No root access]; sleep 2 ;}




case $1 in
-C|-c) a;;
-M|-m) b;;
-L|-l) c;;
-H|-h) d;;
*) 3;;
esac


3
